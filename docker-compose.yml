version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - database1
      - database2

  database1:
    build:
      context: ./backend/customer-support/db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-customer-support:/var/lib/postgresql/data

  database2:
    build:
      context: ./backend/order-processing/db
      dockerfile: Dockerfile
    ports:
      - "5433:5433"
    volumes:
      - postgres-data-order-processing:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - frontend
    deploy:
      replicas: 3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres-data-customer-support:
  postgres-data-order-processing:
